plugins {
    id 'java'
    id 'idea'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-webflux
    id 'org.springframework.boot' version '3.5.3'
    // https://mvnrepository.com/artifact/io.spring.dependency-management/io.spring.dependency-management.gradle.plugin
    id 'io.spring.dependency-management' version '1.1.7'
    // coverage report
    id "jacoco"
    // https://mvnrepository.com/artifact/org.sonarqube/org.sonarqube.gradle.plugin
    id "org.sonarqube" version "6.2.0.5505"
}

group = 'com.github.luyiourwong'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

//JetBrains IDEA auto sources attach
idea {
    module {
        downloadJavadoc = false //doc useless, source instead
        downloadSources = true
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

// exclude default logback
configurations.configureEach {
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    exclude group: 'commons-logging', module: 'commons-logging'
}

dependencies {
    // spring
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'

    // database
//    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'

    // https://mvnrepository.com/artifact/org.projectlombok/lombok
    compileOnly 'org.projectlombok:lombok:1.18.38'
    annotationProcessor 'org.projectlombok:lombok'

    // https://central.sonatype.com/artifact/com.google.genai/google-genai
    implementation 'com.google.genai:google-genai:1.7.0'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.required = true
    }
}
jacoco {
    toolVersion = "0.8.13"
    reportsDirectory = layout.buildDirectory.dir('reports/jacoco')
}
sonarqube {
    properties {
        property "sonar.projectKey", "luyiourwong_HalluFarmServer"
        property "sonar.organization", "luyiourwong"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
    }
}